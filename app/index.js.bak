'use strict';
var yeoman = require('yeoman-generator');
var path = require('path');
var chalk = require('chalk');
var yosay = require('yosay');
var cp = require('child_process');
//var atlasUtil = require('generator-atlas/util.js');

module.exports = yeoman.generators.Base.extend({

  compose: function() {
    this.composeWith('atlas', { options: {
      skipInstall: this.options['skip-install'],
      bowerJsonInstalled: true
    }});
    this.sourceRoot(path.join(__dirname, '../templates'));
  },

  promptModules: function () {
    var done = this.async();

    // Have Yeoman greet the user.
    this.log(yosay(
      'Welcome to the ' + chalk.red('Atlas') + ' generator!'
    ));

    var prompts = [{
      type: 'checkbox',
      name: 'modules',
      message: 'Which modules would you like to include?',
      choices: [
      {
        value: 'animateModule',
        name: 'angular-animate.js',
        checked: false
      }, {
        value: 'ariaModule',
        name: 'angular-aria.js',
        checked: false
      }, {
        value: 'cookiesModule',
        name: 'angular-cookies.js',
        checked: false
      }, {
        value: 'resourceModule',
        name: 'angular-resource.js',
        checked: false
      }, {
        value: 'messagesModule',
        name: 'angular-messages.js',
        checked: false
      }, {
        value: 'routeModule',
        name: 'angular-route.js',
        checked: true
      }, {
        value: 'sanitizeModule',
        name: 'angular-sanitize.js',
        checked: false
      }, {
        value: 'touchModule',
        name: 'angular-touch.js',
        checked: false
      }
      ]
    }];
    this.prompt(prompts, function (props) {
      var hasMod = function (mod) { return props.modules.indexOf(mod) !== -1; };
      this.tester = 'ACK ACK';
      this.animateModule = hasMod('animateModule');
      this.ariaModule = hasMod('ariaModule');
      this.cookiesModule = hasMod('cookiesModule');
      this.messagesModule = hasMod('messagesModule');
      this.resourceModule = hasMod('resourceModule');
      this.routeModule = hasMod('routeModule');
      this.sanitizeModule = hasMod('sanitizeModule');
      this.touchModule = hasMod('touchModule');

      var angMods = [];

      if (this.animateModule) {
        angMods.push("'ngAnimate'");
      }

      if (this.ariaModule) {
        angMods.push("'ngAria'");
      }

      if (this.cookiesModule) {
        angMods.push("'ngCookies'");
      }

      if (this.messagesModule) {
        angMods.push("'ngMessages'");
      }

      if (this.resourceModule) {
        angMods.push("'ngResource'");
      }

      if (this.routeModule) {
        angMods.push("'ngRoute'");
        this.env.options.ngRoute = true;
      }

      if (this.sanitizeModule) {
        angMods.push("'ngSanitize'");
      }

      if (this.touchModule) {
        angMods.push("'ngTouch'");
      }

      if (angMods.length) {
        this.env.options.angularDeps = '\n    ' + angMods.join(',\n    ') + '\n  ';
      }

      done();
    }.bind(this));

  },
  writing: {
    app: function () {
      this.copy('app/_bower.json','app/bower.json');
      this.copy('app/_index.html','app/index.html');
    }

  },
  install: function () {
    //this.bowerInstall(['angular'], { 'save': true });
  }

});
